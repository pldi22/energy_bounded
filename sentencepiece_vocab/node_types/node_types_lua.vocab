<unk>	0
<s>	0
</s>	0
<pad>	0
<endofline>	0
<endoftext>	0
▁#	-4.54329
▁%	-4.54329
▁&	-4.54329
▁(	-4.54329
▁)	-4.54329
▁*	-4.54329
▁+	-4.54329
▁,	-4.54329
▁-	-4.54329
▁.	-4.54329
▁..	-4.54329
▁/	-4.54329
▁//	-4.54329
▁:	-4.54329
▁::	-4.54329
▁;	-4.54329
▁<	-4.54329
▁<<	-4.54329
▁<=	-4.54329
▁=	-4.54329
▁==	-4.54329
▁>	-4.54329
▁>=	-4.54329
▁>>	-4.54329
▁[	-4.54329
▁]	-4.54329
▁^	-4.54329
▁_G	-4.54329
▁_VERSION	-4.54329
▁and	-4.54329
▁arguments	-4.54329
▁binary_operation	-4.54329
▁break_statement	-4.54329
▁comment	-4.54329
▁condition_expression	-4.54329
▁do	-4.54329
▁do_statement	-4.54329
▁else	-4.54329
▁elseif	-4.54329
▁end	-4.54329
▁expression	-4.54329
▁false	-4.54329
▁field	-4.54329
▁field_expression	-4.54329
▁for	-4.54329
▁for_in_statement	-4.54329
▁for_statement	-4.54329
▁function	-4.54329
▁function_call	-4.54329
▁function_definition	-4.54329
▁function_name	-4.54329
▁function_name_field	-4.54329
▁global_variable	-4.54329
▁goto	-4.54329
▁goto_statement	-4.54329
▁identifier	-4.54329
▁if	-4.54329
▁if_statement	-4.54329
▁in	-4.54329
▁label_statement	-4.54329
▁local	-4.54329
▁local_function	-4.54329
▁local_variable_declaration	-4.54329
▁loop_expression	-4.54329
▁method	-4.54329
▁next	-4.54329
▁nil	-4.54329
▁not	-4.54329
▁number	-4.54329
▁or	-4.54329
▁parameters	-4.54329
▁program	-4.54329
▁property_identifier	-4.54329
▁repeat	-4.54329
▁repeat_statement	-4.54329
▁return	-4.54329
▁return_statement	-4.54329
▁self	-4.54329
▁spread	-4.54329
▁string	-4.54329
▁table	-4.54329
▁then	-4.54329
▁true	-4.54329
▁unary_operation	-4.54329
▁until	-4.54329
▁variable_declaration	-4.54329
▁variable_declarator	-4.54329
▁while	-4.54329
▁while_statement	-4.54329
▁{	-4.54329
▁|	-4.54329
▁}	-4.54329
▁~	-4.54329
▁~=	-4.54329
