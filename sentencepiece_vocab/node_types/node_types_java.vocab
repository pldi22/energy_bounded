<unk>	0
<s>	0
</s>	0
<pad>	0
<endofline>	0
<endoftext>	0
▁!	-5.44242
▁!=	-5.44242
▁%	-5.44242
▁%=	-5.44242
▁&	-5.44242
▁&&	-5.44242
▁&=	-5.44242
▁(	-5.44242
▁)	-5.44242
▁*	-5.44242
▁*=	-5.44242
▁+	-5.44242
▁++	-5.44242
▁+=	-5.44242
▁,	-5.44242
▁-	-5.44242
▁--	-5.44242
▁-=	-5.44242
▁->	-5.44242
▁.	-5.44242
▁...	-5.44242
▁/	-5.44242
▁/=	-5.44242
▁:	-5.44242
▁::	-5.44242
▁;	-5.44242
▁<	-5.44242
▁<<	-5.44242
▁<<=	-5.44242
▁<=	-5.44242
▁=	-5.44242
▁==	-5.44242
▁>	-5.44242
▁>=	-5.44242
▁>>	-5.44242
▁>>=	-5.44242
▁>>>	-5.44242
▁>>>=	-5.44242
▁?	-5.44242
▁@	-5.44242
▁@interface	-5.44242
▁[	-5.44242
▁]	-5.44242
▁^	-5.44242
▁^=	-5.44242
▁_literal	-5.44242
▁_simple_type	-5.44242
▁_type	-5.44242
▁_unannotated_type	-5.44242
▁abstract	-5.44242
▁annotated_type	-5.44242
▁annotation	-5.44242
▁annotation_argument_list	-5.44242
▁annotation_type_body	-5.44242
▁annotation_type_declaration	-5.44242
▁annotation_type_element_declaration	-5.44242
▁argument_list	-5.44242
▁array_access	-5.44242
▁array_creation_expression	-5.44242
▁array_initializer	-5.44242
▁array_type	-5.44242
▁assert	-5.44242
▁assert_statement	-5.44242
▁assignment_expression	-5.44242
▁asterisk	-5.44242
▁binary_expression	-5.44242
▁binary_integer_literal	-5.44242
▁block	-5.44242
▁boolean_type	-5.44242
▁break	-5.44242
▁break_statement	-5.44242
▁byte	-5.44242
▁case	-5.44242
▁cast_expression	-5.44242
▁catch	-5.44242
▁catch_clause	-5.44242
▁catch_formal_parameter	-5.44242
▁catch_type	-5.44242
▁char	-5.44242
▁character_literal	-5.44242
▁class	-5.44242
▁class_body	-5.44242
▁class_declaration	-5.44242
▁class_literal	-5.44242
▁comment	-5.44242
▁constant_declaration	-5.44242
▁constructor_body	-5.44242
▁constructor_declaration	-5.44242
▁continue	-5.44242
▁continue_statement	-5.44242
▁decimal_floating_point_literal	-5.44242
▁decimal_integer_literal	-5.44242
▁declaration	-5.44242
▁default	-5.44242
▁dimensions	-5.44242
▁dimensions_expr	-5.44242
▁do	-5.44242
▁do_statement	-5.44242
▁double	-5.44242
▁element_value_array_initializer	-5.44242
▁element_value_pair	-5.44242
▁else	-5.44242
▁enhanced_for_statement	-5.44242
▁enum	-5.44242
▁enum_body	-5.44242
▁enum_body_declarations	-5.44242
▁enum_constant	-5.44242
▁enum_declaration	-5.44242
▁explicit_constructor_invocation	-5.44242
▁exports	-5.44242
▁expression	-5.44242
▁expression_statement	-5.44242
▁extends	-5.44242
▁extends_interfaces	-5.44242
▁false	-5.44242
▁field_access	-5.44242
▁field_declaration	-5.44242
▁final	-5.44242
▁finally	-5.44242
▁finally_clause	-5.44242
▁float	-5.44242
▁floating_point_type	-5.44242
▁for	-5.44242
▁for_statement	-5.44242
▁formal_parameter	-5.44242
▁formal_parameters	-5.44242
▁generic_type	-5.44242
▁hex_floating_point_literal	-5.44242
▁hex_integer_literal	-5.44242
▁identifier	-5.44242
▁if	-5.44242
▁if_statement	-5.44242
▁implements	-5.44242
▁import	-5.44242
▁import_declaration	-5.44242
▁inferred_parameters	-5.44242
▁instanceof	-5.44242
▁instanceof_expression	-5.44242
▁int	-5.44242
▁integral_type	-5.44242
▁interface	-5.44242
▁interface_body	-5.44242
▁interface_declaration	-5.44242
▁interface_type_list	-5.44242
▁labeled_statement	-5.44242
▁lambda_expression	-5.44242
▁local_variable_declaration	-5.44242
▁long	-5.44242
▁marker_annotation	-5.44242
▁method_declaration	-5.44242
▁method_invocation	-5.44242
▁method_reference	-5.44242
▁modifiers	-5.44242
▁module	-5.44242
▁module_body	-5.44242
▁module_declaration	-5.44242
▁module_directive	-5.44242
▁native	-5.44242
▁new	-5.44242
▁null_literal	-5.44242
▁object_creation_expression	-5.44242
▁octal_integer_literal	-5.44242
▁open	-5.44242
▁opens	-5.44242
▁package	-5.44242
▁package_declaration	-5.44242
▁parenthesized_expression	-5.44242
▁primary_expression	-5.44242
▁private	-5.44242
▁program	-5.44242
▁protected	-5.44242
▁provides	-5.44242
▁public	-5.44242
▁receiver_parameter	-5.44242
▁requires	-5.44242
▁requires_modifier	-5.44242
▁resource	-5.44242
▁resource_specification	-5.44242
▁return	-5.44242
▁return_statement	-5.44242
▁scoped_identifier	-5.44242
▁scoped_type_identifier	-5.44242
▁short	-5.44242
▁spread_parameter	-5.44242
▁statement	-5.44242
▁static	-5.44242
▁static_initializer	-5.44242
▁strictfp	-5.44242
▁string_literal	-5.44242
▁super	-5.44242
▁super_interfaces	-5.44242
▁superclass	-5.44242
▁switch	-5.44242
▁switch_block	-5.44242
▁switch_label	-5.44242
▁switch_statement	-5.44242
▁synchronized	-5.44242
▁synchronized_statement	-5.44242
▁ternary_expression	-5.44242
▁this	-5.44242
▁throw	-5.44242
▁throw_statement	-5.44242
▁throws	-5.44242
▁to	-5.44242
▁transient	-5.44242
▁transitive	-5.44242
▁true	-5.44242
▁try	-5.44242
▁try_statement	-5.44242
▁try_with_resources_statement	-5.44242
▁type_arguments	-5.44242
▁type_bound	-5.44242
▁type_identifier	-5.44242
▁type_parameter	-5.44242
▁type_parameters	-5.44242
▁unary_expression	-5.44242
▁update_expression	-5.44242
▁uses	-5.44242
▁variable_declarator	-5.44242
▁void_type	-5.44242
▁volatile	-5.44242
▁while	-5.44242
▁while_statement	-5.44242
▁wildcard	-5.44242
▁with	-5.44242
▁{	-5.44242
▁|	-5.44242
▁|=	-5.44242
▁||	-5.44242
▁}	-5.44242
▁~	-5.44242
