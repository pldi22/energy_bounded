<unk>	0
<s>	0
</s>	0
<pad>	0
<endofline>	0
<endoftext>	0
▁!	-5.53733
▁!=	-5.53733
▁!==	-5.53733
▁$	-5.53733
▁%	-5.53733
▁%=	-5.53733
▁&	-5.53733
▁&&	-5.53733
▁&=	-5.53733
▁(	-5.53733
▁)	-5.53733
▁*	-5.53733
▁**	-5.53733
▁**=	-5.53733
▁*=	-5.53733
▁+	-5.53733
▁++	-5.53733
▁+=	-5.53733
▁,	-5.53733
▁-	-5.53733
▁--	-5.53733
▁-=	-5.53733
▁->	-5.53733
▁.	-5.53733
▁...	-5.53733
▁.=	-5.53733
▁/	-5.53733
▁/=	-5.53733
▁:	-5.53733
▁::	-5.53733
▁;	-5.53733
▁<	-5.53733
▁<<	-5.53733
▁<<=	-5.53733
▁<=	-5.53733
▁<=>	-5.53733
▁<>	-5.53733
▁=	-5.53733
▁==	-5.53733
▁===	-5.53733
▁=>	-5.53733
▁>	-5.53733
▁>=	-5.53733
▁>>	-5.53733
▁>>=	-5.53733
▁?	-5.53733
▁?>	-5.53733
▁??	-5.53733
▁@	-5.53733
▁[	-5.53733
▁\	-5.53733
▁]	-5.53733
▁^	-5.53733
▁^=	-5.53733
▁_expression	-5.53733
▁_literal	-5.53733
▁_primary_expression	-5.53733
▁_statement	-5.53733
▁_type	-5.53733
▁abstract	-5.53733
▁and	-5.53733
▁anonymous_function_creation_expression	-5.53733
▁anonymous_function_use_clause	-5.53733
▁arguments	-5.53733
▁array	-5.53733
▁array_creation_expression	-5.53733
▁array_element_initializer	-5.53733
▁as	-5.53733
▁assignment_expression	-5.53733
▁augmented_assignment_expression	-5.53733
▁base_clause	-5.53733
▁binary	-5.53733
▁binary_expression	-5.53733
▁bool	-5.53733
▁boolean	-5.53733
▁break	-5.53733
▁break_statement	-5.53733
▁callable	-5.53733
▁case	-5.53733
▁case_statement	-5.53733
▁cast_expression	-5.53733
▁cast_type	-5.53733
▁catch	-5.53733
▁catch_clause	-5.53733
▁class	-5.53733
▁class_constant_access_expression	-5.53733
▁class_declaration	-5.53733
▁class_interface_clause	-5.53733
▁class_modifier	-5.53733
▁clone	-5.53733
▁clone_expression	-5.53733
▁colon_block	-5.53733
▁compound_statement	-5.53733
▁conditional_expression	-5.53733
▁const	-5.53733
▁const_declaration	-5.53733
▁const_element	-5.53733
▁continue	-5.53733
▁continue_statement	-5.53733
▁declaration_list	-5.53733
▁declare	-5.53733
▁declare_directive	-5.53733
▁declare_statement	-5.53733
▁default	-5.53733
▁default_statement	-5.53733
▁do	-5.53733
▁do_statement	-5.53733
▁double	-5.53733
▁dynamic_variable_name	-5.53733
▁echo	-5.53733
▁echo_statement	-5.53733
▁else	-5.53733
▁else_clause	-5.53733
▁else_if_clause	-5.53733
▁elseif	-5.53733
▁empty_statement	-5.53733
▁encoding	-5.53733
▁enddeclare	-5.53733
▁endfor	-5.53733
▁endforeach	-5.53733
▁endif	-5.53733
▁endswitch	-5.53733
▁endwhile	-5.53733
▁exponentiation_expression	-5.53733
▁expression_statement	-5.53733
▁extends	-5.53733
▁final	-5.53733
▁finally	-5.53733
▁finally_clause	-5.53733
▁float	-5.53733
▁for	-5.53733
▁for_statement	-5.53733
▁foreach	-5.53733
▁foreach_statement	-5.53733
▁formal_parameters	-5.53733
▁from	-5.53733
▁function	-5.53733
▁function_call_expression	-5.53733
▁function_definition	-5.53733
▁function_static_declaration	-5.53733
▁global	-5.53733
▁global_declaration	-5.53733
▁goto	-5.53733
▁goto_statement	-5.53733
▁heredoc	-5.53733
▁if	-5.53733
▁if_statement	-5.53733
▁implements	-5.53733
▁include	-5.53733
▁include_expression	-5.53733
▁include_once	-5.53733
▁include_once_expression	-5.53733
▁instanceof	-5.53733
▁insteadof	-5.53733
▁int	-5.53733
▁integer	-5.53733
▁interface	-5.53733
▁interface_declaration	-5.53733
▁iterable	-5.53733
▁list	-5.53733
▁list_literal	-5.53733
▁member_access_expression	-5.53733
▁member_call_expression	-5.53733
▁method_declaration	-5.53733
▁name	-5.53733
▁named_label_statement	-5.53733
▁namespace	-5.53733
▁namespace_aliasing_clause	-5.53733
▁namespace_definition	-5.53733
▁namespace_name	-5.53733
▁namespace_name_as_prefix	-5.53733
▁namespace_use_clause	-5.53733
▁namespace_use_declaration	-5.53733
▁namespace_use_group	-5.53733
▁namespace_use_group_clause	-5.53733
▁new	-5.53733
▁null	-5.53733
▁object	-5.53733
▁object_creation_expression	-5.53733
▁optional_type	-5.53733
▁or	-5.53733
▁pair	-5.53733
▁parent	-5.53733
▁parenthesized_expression	-5.53733
▁php_tag	-5.53733
▁primitive_type	-5.53733
▁print	-5.53733
▁print_intrinsic	-5.53733
▁private	-5.53733
▁program	-5.53733
▁property_declaration	-5.53733
▁property_element	-5.53733
▁property_initializer	-5.53733
▁protected	-5.53733
▁public	-5.53733
▁qualified_name	-5.53733
▁real	-5.53733
▁relative_scope	-5.53733
▁require	-5.53733
▁require_expression	-5.53733
▁require_once	-5.53733
▁require_once_expression	-5.53733
▁return	-5.53733
▁return_statement	-5.53733
▁scoped_call_expression	-5.53733
▁scoped_property_access_expression	-5.53733
▁self	-5.53733
▁sequence_expression	-5.53733
▁shell_command_expression	-5.53733
▁simple_parameter	-5.53733
▁static	-5.53733
▁static_modifier	-5.53733
▁static_variable_declaration	-5.53733
▁strict_types	-5.53733
▁string	-5.53733
▁subscript_expression	-5.53733
▁switch	-5.53733
▁switch_block	-5.53733
▁switch_statement	-5.53733
▁text	-5.53733
▁throw	-5.53733
▁throw_statement	-5.53733
▁ticks	-5.53733
▁trait	-5.53733
▁trait_declaration	-5.53733
▁try	-5.53733
▁try_statement	-5.53733
▁type_name	-5.53733
▁unary_op_expression	-5.53733
▁unset	-5.53733
▁unset_statement	-5.53733
▁update_expression	-5.53733
▁use	-5.53733
▁use_as_clause	-5.53733
▁use_declaration	-5.53733
▁use_instead_of_clause	-5.53733
▁use_list	-5.53733
▁var_modifier	-5.53733
▁variable_name	-5.53733
▁variadic_parameter	-5.53733
▁variadic_unpacking	-5.53733
▁visibility_modifier	-5.53733
▁void	-5.53733
▁while	-5.53733
▁while_statement	-5.53733
▁xor	-5.53733
▁yield	-5.53733
▁yield_expression	-5.53733
▁{	-5.53733
▁|	-5.53733
▁|=	-5.53733
▁||	-5.53733
▁}	-5.53733
▁~	-5.53733
