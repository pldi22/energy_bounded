<unk>	0
<s>	0
</s>	0
<pad>	0
<endofline>	0
<endoftext>	0
▁!	-5.25227
▁!=	-5.25227
▁!~	-5.25227
▁"	-5.25227
▁#{	-5.25227
▁%	-5.25227
▁%=	-5.25227
▁%i(	-5.25227
▁%w(	-5.25227
▁&	-5.25227
▁&&	-5.25227
▁&&=	-5.25227
▁&.	-5.25227
▁&=	-5.25227
▁(	-5.25227
▁)	-5.25227
▁*	-5.25227
▁**	-5.25227
▁**=	-5.25227
▁*=	-5.25227
▁+	-5.25227
▁+=	-5.25227
▁+@	-5.25227
▁,	-5.25227
▁-	-5.25227
▁-=	-5.25227
▁->	-5.25227
▁-@	-5.25227
▁.	-5.25227
▁..	-5.25227
▁...	-5.25227
▁/	-5.25227
▁/=	-5.25227
▁:	-5.25227
▁:"	-5.25227
▁::	-5.25227
▁;	-5.25227
▁<	-5.25227
▁<<	-5.25227
▁<<=	-5.25227
▁<=	-5.25227
▁<=>	-5.25227
▁=	-5.25227
▁==	-5.25227
▁===	-5.25227
▁=>	-5.25227
▁=~	-5.25227
▁>	-5.25227
▁>=	-5.25227
▁>>	-5.25227
▁>>=	-5.25227
▁?	-5.25227
▁BEGIN	-5.25227
▁END	-5.25227
▁[	-5.25227
▁[]	-5.25227
▁[]=	-5.25227
▁]	-5.25227
▁^	-5.25227
▁^=	-5.25227
▁__END__	-5.25227
▁_arg	-5.25227
▁_lhs	-5.25227
▁_method_name	-5.25227
▁_primary	-5.25227
▁_statement	-5.25227
▁_variable	-5.25227
▁`	-5.25227
▁alias	-5.25227
▁and	-5.25227
▁argument_list	-5.25227
▁array	-5.25227
▁assignment	-5.25227
▁bare_string	-5.25227
▁bare_symbol	-5.25227
▁begin	-5.25227
▁begin_block	-5.25227
▁binary	-5.25227
▁block	-5.25227
▁block_argument	-5.25227
▁block_parameter	-5.25227
▁block_parameters	-5.25227
▁break	-5.25227
▁call	-5.25227
▁case	-5.25227
▁chained_string	-5.25227
▁character	-5.25227
▁class	-5.25227
▁class_variable	-5.25227
▁comment	-5.25227
▁complex	-5.25227
▁conditional	-5.25227
▁constant	-5.25227
▁def	-5.25227
▁defined?	-5.25227
▁destructured_left_assignment	-5.25227
▁destructured_parameter	-5.25227
▁do	-5.25227
▁do_block	-5.25227
▁element_reference	-5.25227
▁else	-5.25227
▁elsif	-5.25227
▁empty_statement	-5.25227
▁end	-5.25227
▁end_block	-5.25227
▁ensure	-5.25227
▁escape_sequence	-5.25227
▁exception_variable	-5.25227
▁exceptions	-5.25227
▁false	-5.25227
▁float	-5.25227
▁for	-5.25227
▁global_variable	-5.25227
▁hash	-5.25227
▁hash_splat_argument	-5.25227
▁hash_splat_parameter	-5.25227
▁heredoc_beginning	-5.25227
▁heredoc_body	-5.25227
▁heredoc_content	-5.25227
▁heredoc_end	-5.25227
▁identifier	-5.25227
▁if	-5.25227
▁if_modifier	-5.25227
▁in	-5.25227
▁instance_variable	-5.25227
▁integer	-5.25227
▁interpolation	-5.25227
▁keyword_parameter	-5.25227
▁lambda	-5.25227
▁lambda_parameters	-5.25227
▁left_assignment_list	-5.25227
▁method	-5.25227
▁method_parameters	-5.25227
▁module	-5.25227
▁next	-5.25227
▁nil	-5.25227
▁not	-5.25227
▁operator	-5.25227
▁operator_assignment	-5.25227
▁optional_parameter	-5.25227
▁or	-5.25227
▁pair	-5.25227
▁parenthesized_statements	-5.25227
▁pattern	-5.25227
▁program	-5.25227
▁r	-5.25227
▁range	-5.25227
▁rational	-5.25227
▁redo	-5.25227
▁regex	-5.25227
▁rescue	-5.25227
▁rescue_modifier	-5.25227
▁rest_assignment	-5.25227
▁retry	-5.25227
▁return	-5.25227
▁right_assignment_list	-5.25227
▁scope_resolution	-5.25227
▁self	-5.25227
▁setter	-5.25227
▁singleton_class	-5.25227
▁singleton_method	-5.25227
▁splat_argument	-5.25227
▁splat_parameter	-5.25227
▁string	-5.25227
▁string_array	-5.25227
▁string_content	-5.25227
▁subshell	-5.25227
▁super	-5.25227
▁superclass	-5.25227
▁symbol	-5.25227
▁symbol_array	-5.25227
▁then	-5.25227
▁true	-5.25227
▁unary	-5.25227
▁undef	-5.25227
▁uninterpreted	-5.25227
▁unless	-5.25227
▁unless_modifier	-5.25227
▁until	-5.25227
▁until_modifier	-5.25227
▁when	-5.25227
▁while	-5.25227
▁while_modifier	-5.25227
▁yield	-5.25227
▁{	-5.25227
▁|	-5.25227
▁|=	-5.25227
▁||	-5.25227
▁||=	-5.25227
▁}	-5.25227
▁~	-5.25227
