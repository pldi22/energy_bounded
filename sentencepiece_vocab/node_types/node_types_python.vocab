<unk>	0
<s>	0
</s>	0
<pad>	0
<endofline>	0
<endoftext>	0
▁!=	-5.20401
▁"	-5.20401
▁%	-5.20401
▁%=	-5.20401
▁&	-5.20401
▁&=	-5.20401
▁(	-5.20401
▁)	-5.20401
▁*	-5.20401
▁**	-5.20401
▁**=	-5.20401
▁*=	-5.20401
▁+	-5.20401
▁+=	-5.20401
▁,	-5.20401
▁-	-5.20401
▁-=	-5.20401
▁->	-5.20401
▁.	-5.20401
▁/	-5.20401
▁//	-5.20401
▁//=	-5.20401
▁/=	-5.20401
▁:	-5.20401
▁:=	-5.20401
▁<	-5.20401
▁<<	-5.20401
▁<<=	-5.20401
▁<=	-5.20401
▁<>	-5.20401
▁=	-5.20401
▁==	-5.20401
▁>	-5.20401
▁>=	-5.20401
▁>>	-5.20401
▁>>=	-5.20401
▁@	-5.20401
▁@=	-5.20401
▁[	-5.20401
▁]	-5.20401
▁^	-5.20401
▁^=	-5.20401
▁__future__	-5.20401
▁_compound_statement	-5.20401
▁_simple_statement	-5.20401
▁aliased_import	-5.20401
▁and	-5.20401
▁argument_list	-5.20401
▁as	-5.20401
▁assert	-5.20401
▁assert_statement	-5.20401
▁assignment	-5.20401
▁async	-5.20401
▁attribute	-5.20401
▁augmented_assignment	-5.20401
▁await	-5.20401
▁binary_operator	-5.20401
▁block	-5.20401
▁boolean_operator	-5.20401
▁break	-5.20401
▁break_statement	-5.20401
▁call	-5.20401
▁chevron	-5.20401
▁class	-5.20401
▁class_definition	-5.20401
▁comment	-5.20401
▁comparison_operator	-5.20401
▁concatenated_string	-5.20401
▁conditional_expression	-5.20401
▁continue	-5.20401
▁continue_statement	-5.20401
▁decorated_definition	-5.20401
▁decorator	-5.20401
▁def	-5.20401
▁default_parameter	-5.20401
▁del	-5.20401
▁delete_statement	-5.20401
▁dictionary	-5.20401
▁dictionary_comprehension	-5.20401
▁dictionary_splat	-5.20401
▁dictionary_splat_pattern	-5.20401
▁dotted_name	-5.20401
▁elif	-5.20401
▁elif_clause	-5.20401
▁ellipsis	-5.20401
▁else	-5.20401
▁else_clause	-5.20401
▁escape_sequence	-5.20401
▁except	-5.20401
▁except_clause	-5.20401
▁exec	-5.20401
▁exec_statement	-5.20401
▁expression	-5.20401
▁expression_list	-5.20401
▁expression_statement	-5.20401
▁false	-5.20401
▁finally	-5.20401
▁finally_clause	-5.20401
▁float	-5.20401
▁for	-5.20401
▁for_in_clause	-5.20401
▁for_statement	-5.20401
▁format_expression	-5.20401
▁format_specifier	-5.20401
▁from	-5.20401
▁function_definition	-5.20401
▁future_import_statement	-5.20401
▁generator_expression	-5.20401
▁global	-5.20401
▁global_statement	-5.20401
▁identifier	-5.20401
▁if	-5.20401
▁if_clause	-5.20401
▁if_statement	-5.20401
▁import	-5.20401
▁import_from_statement	-5.20401
▁import_prefix	-5.20401
▁import_statement	-5.20401
▁in	-5.20401
▁integer	-5.20401
▁interpolation	-5.20401
▁is	-5.20401
▁keyword_argument	-5.20401
▁lambda	-5.20401
▁lambda_parameters	-5.20401
▁list	-5.20401
▁list_comprehension	-5.20401
▁list_pattern	-5.20401
▁list_splat	-5.20401
▁list_splat_pattern	-5.20401
▁module	-5.20401
▁named_expression	-5.20401
▁none	-5.20401
▁nonlocal	-5.20401
▁nonlocal_statement	-5.20401
▁not	-5.20401
▁not_operator	-5.20401
▁or	-5.20401
▁pair	-5.20401
▁parameter	-5.20401
▁parameters	-5.20401
▁parenthesized_expression	-5.20401
▁parenthesized_list_splat	-5.20401
▁pass	-5.20401
▁pass_statement	-5.20401
▁pattern	-5.20401
▁pattern_list	-5.20401
▁primary_expression	-5.20401
▁print	-5.20401
▁print_statement	-5.20401
▁raise	-5.20401
▁raise_statement	-5.20401
▁relative_import	-5.20401
▁return	-5.20401
▁return_statement	-5.20401
▁set	-5.20401
▁set_comprehension	-5.20401
▁slice	-5.20401
▁string	-5.20401
▁subscript	-5.20401
▁true	-5.20401
▁try	-5.20401
▁try_statement	-5.20401
▁tuple	-5.20401
▁tuple_pattern	-5.20401
▁type	-5.20401
▁type_conversion	-5.20401
▁typed_default_parameter	-5.20401
▁typed_parameter	-5.20401
▁unary_operator	-5.20401
▁while	-5.20401
▁while_statement	-5.20401
▁wildcard_import	-5.20401
▁with	-5.20401
▁with_item	-5.20401
▁with_statement	-5.20401
▁yield	-5.20401
▁{	-5.20401
▁|	-5.20401
▁|=	-5.20401
▁}	-5.20401
▁~	-5.20401
